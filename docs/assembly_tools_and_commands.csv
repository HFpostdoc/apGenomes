stage,tool,function,command,code_bases,version,notes
data preparation,CacheLibs.pl,prepare data for assembly,CacheLibs.pl ACTION=Add IN_LIBS_CSV=/cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/cache/in_libs.csv CACHE_DIR=/cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/cache,ALLPATHS,R48559,Requires user to have set up the required UNIX directories including the cache directory
,CacheGroups.pl,prepare data for assembly,CacheGroups.pl PICARD_TOOLS_DIR=/seq/software/picard-public/current/ ACTION=Add CACHE_DIR=/cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/cache JAVA_MEM_GB=50 IN_GROUPS_CSV=/cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/cache/in_groups.csv PHRED_64=0 HOSTS=4,ALLPATHS,R48559,"This perl script will call another perl script, ConvertToFastbQualb.pl.  ConvertToFastbQualb.pl will for each group run  SamToFastq (convert from BAM to fastq format), FastqToFastbQualb (convert from fastq to fastb/qualb), MergePairedFastbs (combined separate read 1 and read 2 files into single paired file), and FastbQualbTrimReverse (reverse complements jump reads)."
assembly,ALLPATHS-LG,assemble,RunAllPathsLG K=96 THREADS=40   PRE=/cil/shed/apps/internal/ale/production/projects/X966     REFERENCE_NAME=SM-AJDMW  DATA_SUBDIR=SM-AJDMW_allpaths_39f30j_59742 RUN=run  SUBDIR=test   TARGETS=submission EVALUATION=BASIC OVERWRITE=True  HAPLOIDIFY=True MIN_CONTIG=500,ALLPATHS,R48559,"Of the many output files generated the primary assembly files will be in the SUBDIR directory and named ""submission.contigs.fasta"", ""submission.assembly.fasta"", and ""submission.agp"".  These three files will be used as the input to the first post-processing step, filter_assembly.py ; RunAllPathsLG included many steps.  See the attached assembly.log for full details of all steps run."
post-processing,filter_assembly.py,filter small contigs and scaffolds,filter_assembly.py -c /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/initial/in.SM-AJDMW_allpaths_39f30j_59742.contigs.fasta -a /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/initial/in.SM-AJDMW_allpaths_39f30j_59742.agp --min_contig_length 200 --min_scaffold_length 1000 -o /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/initial/SM-AJDMW_allpaths_39f30j_59742,GAEMR, - ,"Identifes the small contigs/scaffolds.  The following script, modify_assembly.py, will remove these from the assembly."
,modify_assembly.py,removed small contigs and scaffolds,modify_assembly.py --agp /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/initial/in.SM-AJDMW_allpaths_39f30j_59742.agp --command_file /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/initial/SM-AJDMW_allpaths_39f30j_59742.directives.txt --sort_by_length --rename --output_header /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/initial/SM-AJDMW_allpaths_39f30j_59742 /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/initial/in.SM-AJDMW_allpaths_39f30j_59742.contigs.fasta,guinan, - ,Removes any small contigs/scaffolds found by filter_assembly.py.  The output is used as input to align_reads.py
,align_reads.py,align reads to assembly,align_reads.py -t 8 -r /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/pilon/genome.fasta  -i /btl/data/walkup/Ant/data/H7N27ADXY/C1-210_2016-08-09_2016-08-10/2/SM_AJDMW/H7N27ADXY.2.unmapped.bam -o H7N27ADXY.2.aligned.bam,GAEMR, - ,"Aligns reads to assembly. This is run once for each BAM file, so a total of 8 times.  The ""genome.fasta"" file in the pilon directory is a copy of the assembly scaffolds and will be the input fasta to be corrected by Pilon"
,pilon,improve assembly quality, java -Xmx32g -jar pilon-1.13.jar --output pilon --vcf --diploid --tracks --nostrays --changes --fix all --genome /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/pilon/genome.fasta  --frags H3NHTADXY.2.aligned.bam  --frags HVGCWBCXX.1.aligned.bam  --frags H7N27ADXY.1.aligned.bam  --frags H3VHLADXY.1.aligned.bam  --frags HVNY5BCXX.2.aligned.bam  --jumps H7N27ADXY.2.aligned.bam  --jumps H3NHTADXY.1.aligned.bam  --jumps HVNY5BCXX.1.aligned.bam,pilon,1.13,Increase Xmx memory (e.g. up to 256g) if pilon command fails due to insufficient java memory allocated; The output of this command is the input for run_contamination_screen.py
,run_contamination_screen.py,identify adapter to remove,run_contamination_screen.py -t 4 -r -e -f Directive -v --no_protection --adaptorsdb -o /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/vecscreen/SM-AJDMW_allpaths_39f30j_59742.vector.screen -i SM-AJDMW_allpaths_39f30j_59742/test/vecscreen/in.SM-AJDMW_allpaths_39f30j_59742.contigs.fasta,GAEMR, - ,"This script calls run_blast.py, which calls blastn with the following options:   blastn  -outfmt 5 -query -evalue 700 -searchsp 1750000000000 -num_threads 4 -gapopen 3 -gapextend 3 -task blastn -penalty -5 -reward 1 -dust yes"
,modify_assembly.py,remove adapter ,modify_assembly.py --agp /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/vecscreen/in.SM-AJDMW_allpaths_39f30j_59742.agp --command_file /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/vecscreen/SM-AJDMW_allpaths_39f30j_59742.directives.txt --sort_by_length --rename --output_header /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/vecscreen/SM-AJDMW_allpaths_39f30j_59742 /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/vecscreen/in.SM-AJDMW_allpaths_39f30j_59742.contigs.fasta,guinan, - ,Removes any adapter found by run_contamination_screen.py.  The output of this step is input to tag_duplicated_scaffolds.py
,tag_duplicated_scaffolds.py,identify duplicated scaffolds,tag_duplicated_scaffolds.py -o /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/tag_duplicated_scaffolds/SM-AJDMW_allpaths_39f30j_59742 -a /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/tag_duplicated_scaffolds/in.SM-AJDMW_allpaths_39f30j_59742.agp  /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/tag_duplicated_scaffolds/in.SM-AJDMW_allpaths_39f30j_59742.contigs.fasta,GAEMR, - ,Identifies any duplicated scaffolds in assembly.
,modify_assembly.py,remove duplicated scaffolds,modify_assembly.py --agp /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/tag_duplicated_scaffolds/in.SM-AJDMW_allpaths_39f30j_59742.agp --command_file /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/tag_duplicated_scaffolds/SM-AJDMW_allpaths_39f30j_59742.directives.txt --sort_by_length --rename --output_header /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/tag_duplicated_scaffolds/SM-AJDMW_allpaths_39f30j_59742 /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/tag_duplicated_scaffolds/in.SM-AJDMW_allpaths_39f30j_59742.contigs.fasta,guinan, - ,Removes any duplicate scaffolds found by tag_duplicated_scaffolds.py.  The output of this will be input to GAEMR
analysis,CacheToReads.pl,prepare data for GAEMR,"CacheToReads.pl CACHE_DIR=/cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/cache GROUPS=""{H3NHTADXY.2.SM-AJDMW.frags,HVGCWBCXX.1.SM-AJDMW.frags,H7N27ADXY.1.SM-AJDMW.frags,H3VHLADXY.1.SM-AJDMW.frags,HVNY5BCXX.2.SM-AJDMW.frags}""  OUT_HEAD=frag_reads_orig ",ALLPATHS,R48559,Generates a read 1 and read 2 fastb and qualb for all fragment  paired groups
,CacheToReads.pl,prepare data for GAEMR,"CacheToReads.pl CACHE_DIR=/cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/cache GROUPS=""{H7N27ADXY.2.SM-AJDMW.jumps,H3NHTADXY.1.SM-AJDMW.jumps,HVNY5BCXX.1.SM-AJDMW.jumps,}""  OUT_HEAD=frag_reads_orig ",ALLPATHS,R48559,Generates a read 1 and read 2 fastb and qualb for all jump paired groups
,FastbQualbToFastq,prepare data for GAEMR,FastbQualbToFastq HEAD_IN=frag_reads_orig HEAD_OUT=frag_reads_orig PHRED_OFFSET=33 PAIRED=True PICARD_NAMING_SCHEME=True,ALLPATHS,R48559,Converts frags from fastb/qualb to fastq
,FastbQualbToFastq,prepare data for GAEMR,FastbQualbToFastq HEAD_IN=jump_reads_orig HEAD_OUT=jump_reads_orig PHRED_OFFSET=33 PAIRED=True PICARD_NAMING_SCHEME=True,ALLPATHS,R48559,Converts jumps from fastb/qualb to fastq
,GAEMR.py,analyze assembly,GAEMR.py -t 7 -s /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/submission.assembly.fasta -c /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/submission.contigs.fasta -a /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/submission.agp -m allpaths -n SM-AJDMW_allpaths_39f30j_59742 -o SM-AJDMW_allpaths_39f30j_59742 --base_url /pipeline/assembly/60948 -l /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/analysis/gaemr_inputs/gaemr_read_list.txt -b dc-megablast --no_blast_filter -g --force,GAEMR, - ,"The gaemr_read_list.txt file described the read data to be used in the analysis.  There are two lines, one for jumps and one for frags.  frags line:  ""Fragments,fragment,101,fr,180,/cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/analysis/gaemr_inputs/frag_reads_orig.B.fastq"" and jumps line: ""Jumps,jump,101,fr,3200,/cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/analysis/gaemr_inputs/jump_reads_orig.B.fastq"""
assembly manipulation,modify_assembly.py,remove contaminant contigs,modify_assembly.py --agp in.SM-AJDMW_allpaths_39f30j_59742.agp --command_file contaminants.directives.txt --sort_by_length --rename --output_header /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/tag_duplicated_scaffolds/SM-AJDMW_allpaths_39f30j_59742 /cil/shed/apps/internal/ale/production/projects/X966/SM-AJDMW/SM-AJDMW_allpaths_39f30j_59742/run/ASSEMBLIES/test/tag_duplicated_scaffolds/in.SM-AJDMW_allpaths_39f30j_59742.contigs.fasta,guinan,R48559,If the manual analysis/inspection process identified off-target genome contigs (e.g. Wolbochia and Myocplasma contigs) then the contaminant contigs can be put into a directives file to then be removed from the final assembly.  NOTE: This is internal unrelased code that is not supported elsewhere.